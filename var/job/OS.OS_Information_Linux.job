/**
 * Monitoring properties of system.<br/>
 * @targetVersion Ubuntu 12.04
 * @return get properties of OS.
 * @returnParam OSName The name of the OS.
 * @returnParam OSArchName The type of the OS as 64bit/32bit.
 * @returnParam OSUserCnt The total amount of user in the OS.
 * @returnParam OSHostName The host name of the OS.
 * @returnParam OSInstallDate The date time of the OS installed.
 */
JOB = [name:"OS.OS_Information_Linux"]
FETCHACTION = {
        def finalReturn = []
	def resultData = [:]
	//Get OS Name
	def cmdOSName = "lsb_release -d"
	def procData = procRunner.procExecute(cmdOSName,true)
	def outData = procData.out
	assert outData != null && outData != "", "Process output is null or empty " + procData.err
	//get output data
	resultData["OSName"] = procData.out.trim().split(":")[1].trim()
	//Get OS architect
	def cmdOSArch = "/bin/uname -m"
	procData = procRunner.procExecute(cmdOSArch,true)
	resultData["OSArchName"] = procData.out.trim()
	//Count number of users 
	def cmdOSUserCount = "cat /etc/passwd"
	procData = procRunner.procExecute(cmdOSUserCount,true)
	def numOfUser = 0
	
	procData.out.eachLine{
		if(it.trim() != ""){
			numOfUser++ 
		}
	}
	resultData["OSUserCnt"] = numOfUser
	//Get host name
	def cmdOSHostname = "hostname"
	procData = procRunner.procExecute(cmdOSHostname,true)
	resultData["OSHostName"] = procData.out.trim()
	//Get os install date 
	def cmdOSInstDate = 'ls -lct /etc '
	 
	def lastLine = null	
	procData = procRunner.procExecute(cmdOSInstDate,true)
	procData.out.eachLine{
		if(it.trim() != ""){
			lastLine = it
		}
	}
	def dataDate = lastLine.trim().split(" ")
	dataDate = dataDate.findAll{!it.trim().equals("")}
	if(dataDate[6].toLong() < 10 ){
		dataDate[6] = "0"+dataDate[6]
	}
	resultData["OSInstallDate"] = dataDate[5] + "-" + dataDate[6] + "-" +dataDate[7] 
	java.text.SimpleDateFormat sf = new java.text.SimpleDateFormat("MMM-dd-yyyy")
	def date = sf.parse(resultData["OSInstallDate"])
	sf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
	resultData["OSInstallDate"] = sf.format(date)	
        finalReturn.add(resultData)
	return finalReturn
}

SENDTYPE = "Store"
RESOURCEID = "Windows/OSInfomation"
DEST = parameters.dest
OSINFO = parameters.osinfo
MONITORINGTYPE = '@OS'
